# Vagrant Box Configuration #
Vagrant.require_version ">= 1.7.3"
# UI Object for console interactions.
@ui = Vagrant::UI::Colored.new

############################################################################
#########################     PLUGINS    ###################################
############################################################################

required_plugins = %w(vagrant-triggers)
required_plugins.each do |plugin|
    need_restart = false
    unless Vagrant.has_plugin? plugin
        system "vagrant plugin install #{plugin}"
        need_restart = true
    end
    exec "vagrant #{ARGV.join(' ')}" if need_restart
end

# Load vagrant.yml
vagrant_root = File.dirname(__FILE__) # Vagrantfile location
vagrant_folder_name = File.basename(vagrant_root)  # Folder name only. Used as the SMB share name.
require 'yaml'
if !File.exist?(vagrant_root + '/vagrant.yml')
    @ui.error 'Configuration file not found! Please copy vagrant.yml.dist to vagrant.yml and try again.'
    exit
end
$vconfig = YAML::load_file(vagrant_root + '/vagrant.yml')

Vagrant.configure("2") do |config|

    config.vm.define "default"
    config.vm.hostname = "docker-host"
    config.vm.box = "datasyntax/boot2docker"
    config.vm.box_check_update = true
    config.ssh.username = "docker"
    config.ssh.insert_key = false
    config.ssh.forward_agent = true
    config.ssh.shell = "sh"

    ## Network ##

    box_ip = $vconfig['ip']['primary']  # e.g. 192.168.10.10
    host_ip = box_ip.gsub(/(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/, '\1.\2.\3.1')  # e.g. 192.168.10.1

    # Primary private network IP (default: 192.168.10.10)
    # Using Intel PRO/1000 MT Desktop [82540EM] network adapter - shows slightly better performance compared to "virtio".
    config.vm.network "private_network", ip: box_ip, nic_type: "82540EM"

    # Addtional IP addresses (see vagrant.yml)
    $vconfig['ip']['additional'].each do |private_ip|
        config.vm.network "private_network", ip: private_ip, nic_type: "82540EM"
    end unless $vconfig['ip']['additional'].nil?

    # Make host SSH keys available to containers on /.ssh
    if File.directory?(File.expand_path("~/.ssh"))
        config.vm.synced_folder "~/.ssh", "/.ssh"
    end

    config.vm.synced_folder "../ssl_certs/", "/ssl_certs", type: "rsync"

    config.vm.synced_folder "../iso/docker", "/iso", type: "rsync"

############################################################################
#########################  DOCKER-HOST   ###################################
############################################################################

    config.vm.provider "virtualbox" do |v|
        v.gui = $vconfig['v.gui']           # Set to true for debugging. Will unhide VM's primary console screen.
        v.name = "docker-host"              # VirtualBox VM name.
        v.cpus = $vconfig['v.cpus']         # CPU settings. VirtualBox works much better with a single CPU.
        v.memory = $vconfig['v.memory']     # Memory settings.

        # Disable VirtualBox DNS proxy as it may cause issues.
        # See https://github.com/docker/machine/pull/1069
        v.customize ['modifyvm', :id, '--natdnshostresolver1', 'off']
        v.customize ['modifyvm', :id, '--natdnsproxy1', 'off']
    end

    config.trigger.after [:up, :resume, :provision, :reload], :force => true do
        run "bash -c 'cd .. && ./provision.sh'"
    end

end